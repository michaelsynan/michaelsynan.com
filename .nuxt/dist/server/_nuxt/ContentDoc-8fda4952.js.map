{"version":3,"file":"ContentDoc-8fda4952.js","sources":["../../../../node_modules/.pnpm/@nuxt+content@2.3.0/node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue"],"sourcesContent":["<script>\nimport { defineComponent, h, useSlots } from \"vue\";\nimport { withTrailingSlash } from \"ufo\";\nimport ContentRenderer from \"./ContentRenderer\";\nimport ContentQuery from \"./ContentQuery\";\nimport { useRoute, useContentHead } from \"#imports\";\nexport default defineComponent({\n  name: \"ContentDoc\",\n  props: {\n    tag: {\n      type: String,\n      required: false,\n      default: \"div\"\n    },\n    excerpt: {\n      type: Boolean,\n      default: false\n    },\n    path: {\n      type: String,\n      required: false,\n      default: void 0\n    },\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    },\n    head: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n  render(ctx) {\n    const slots = useSlots();\n    const { tag, excerpt, path, query, head } = ctx;\n    const contentQueryProps = {\n      ...query || {},\n      path: path || query?.path || withTrailingSlash(useRoute().path),\n      find: \"one\"\n    };\n    const emptyNode = (slot, data) => h(\"pre\", null, JSON.stringify({ message: \"You should use slots with <ContentDoc>\", slot, data }, null, 2));\n    return h(\n      ContentQuery,\n      contentQueryProps,\n      {\n        default: slots?.default ? ({ data, refresh, isPartial }) => {\n          if (head) {\n            useContentHead(data);\n          }\n          return slots.default?.({ doc: data, refresh, isPartial, excerpt, ...this.$attrs });\n        } : ({ data }) => {\n          if (head) {\n            useContentHead(data);\n          }\n          return h(\n            ContentRenderer,\n            { value: data, excerpt, tag, ...this.$attrs },\n            { empty: (bindings) => slots?.empty ? slots.empty(bindings) : emptyNode(\"default\", data) }\n          );\n        },\n        empty: (bindings) => slots?.empty?.(bindings) || h(\"p\", null, \"Document is empty, overwrite this content with #empty slot in <ContentDoc>.\"),\n        \"not-found\": (bindings) => slots?.[\"not-found\"]?.(bindings) || h(\"p\", null, \"Document not found, overwrite this content with #not-found slot in <ContentDoc>.\")\n      }\n    );\n  }\n});\n</script>\n"],"names":["ContentRenderer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,MAAA,YAAA,gBAAA;AAAA,EACE,MAAA;AAAA,EACA,OAAA;AAAA;;MAGI,UAAA;AAAA;;IAGF,SAAA;AAAA;;;;;MAME,UAAA;AAAA;;IAGF,OAAA;AAAA;MAEE,UAAA;AAAA;;;;MAKA,UAAA;AAAA;IAEF;AAAA;;AAGA,UAAA,QAAA;AACA,UAAA,EAAA,KAAA,SAAA,MAAA,OAAA,KAAA,IAAA;;;;MAIE,MAAA;AAAA;;AAGF,WAAA;AAAA;MAEE;AAAA,MACA;AAAA;;AAEI,cAAA,MAAA;AACE,2BAAA,IAAA;AAAA,UACF;AACA,kBAAA,WAAA,YAAA,+BAAA,EAAA,KAAA,MAAA,SAAA,WAAA,SAAA,GAAA,KAAA,OAAA;AAAA;AAEA,cAAA,MAAA;AACE,2BAAA,IAAA;AAAA,UACF;AACA,iBAAA;AAAA,YACEA;AAAAA,YACA,EAAA,OAAA,MAAA,SAAA,KAAA,GAAA,KAAA,OAAA;AAAA,YACA,EAAA,OAAA,CAAA,cAAA,+BAAA,SAAA,MAAA,MAAA,QAAA,IAAA,UAAA,WAAA,IAAA,EAAA;AAAA;;;;;;QAIJ,aAAA,CAAA;;AAAA,uDAAA,iBAAA,+BAAA,cAAA,EAAA,KAAA,MAAA,kFAAA;AAAA;AAAA,MACF;AAAA;EAEJ;AACF,CAAA;;;;;;;"}